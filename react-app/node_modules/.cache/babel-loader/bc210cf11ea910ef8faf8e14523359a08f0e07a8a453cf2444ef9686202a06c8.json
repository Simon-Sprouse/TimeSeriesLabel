{"ast":null,"code":"var _jsxFileName = \"/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Graph() {\n  _s();\n  const canvasRef = useRef(null);\n  const [verticalLines, setVerticalLines] = useState([]);\n  const [dataPoints, setDataPoints] = useState(Array.from({\n    length: 20\n  }, () => [Math.random() * canvas.height, 0, 0]));\n  function drawVeriticalLine(event) {\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    ctx.beginPath();\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, canvas.height);\n    ctx.strokeStyle = \"black\";\n    ctx.linewidth = 2;\n    ctx.stroke();\n    setVerticalLines(prevLines => [...prevLines, x]);\n  }\n\n  // populate array with data\n  useEffect(() => {\n    setDataPoints(Array.from({\n      length: 20\n    }, () => [Math.random() * canvas.height, 0, 0]));\n  }, []);\n\n  // populate array with data\n  useEffect(() => {\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.moveTo(0, dataPoints[0][0]);\n    dataPoints.forEach((point, index) => {\n      const x = index / (dataPoints.length - 1) * canvas.width;\n      const price = point[0];\n      ctx.lineTo(x, price);\n    });\n    ctx.strokeStyle = \"blue\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }, []);\n  useEffect(() => {\n    canvas.addEventListener(\"click\", drawVeriticalLine);\n    return () => {\n      canvas.removeEventListener(\"click\", drawVeriticalLine);\n    };\n  }, []);\n  function handleClick() {\n    console.log(verticalLines);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"graph\",\n      ref: canvas,\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Graph, \"IkA5YYC2nIUjRHIf1HdObLBJ/SE=\");\n_c = Graph;\nexport default Graph;\n\n/*\n\n\nOk Here's what the fuck is happening. \n\nSo right now the lines get drawn but aren't stored anywhere. \n\nI need the data array to contain three items per point: \n    - price\n    - id\n    - class\n\nso the array should look like: \n\n    [[58, 0, 1], [50, 0, 1], [60, 1, 3]]\n\nPrice should be generated randomly for now. \nId will be unique for each section bounded by vertical lines\nClass will be generated randomly for now 0-k\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Graph","_s","canvasRef","verticalLines","setVerticalLines","dataPoints","setDataPoints","Array","from","length","Math","random","canvas","height","drawVeriticalLine","event","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","beginPath","moveTo","lineTo","strokeStyle","linewidth","stroke","prevLines","clearRect","width","forEach","point","index","price","lineWidth","addEventListener","removeEventListener","handleClick","console","log","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nfunction Graph() { \n\n    const canvasRef = useRef(null);\n\n    const [verticalLines, setVerticalLines] = useState([]);\n    const [dataPoints, setDataPoints] = useState(Array.from({length: 20}, () => [Math.random() * canvas.height, 0, 0]));\n\n    function drawVeriticalLine(event) { \n\n        const ctx = canvas.getContext(\"2d\");\n        \n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.strokeStyle = \"black\";\n        ctx.linewidth = 2;\n        ctx.stroke();\n\n        setVerticalLines(prevLines => [...prevLines, x]);\n    }\n\n\n    // populate array with data\n    useEffect(() => { \n\n\n        setDataPoints(Array.from({length: 20}, () => [Math.random() * canvas.height, 0, 0]))\n\n    \n    }, []);\n\n\n    // populate array with data\n    useEffect(() => { \n\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.beginPath();\n        ctx.moveTo(0, dataPoints[0][0]);\n\n        dataPoints.forEach((point, index) => { \n            const x = (index / (dataPoints.length - 1)) * canvas.width;\n            const price = point[0]\n            ctx.lineTo(x, price);\n        });\n\n        ctx.strokeStyle = \"blue\";\n        ctx.lineWidth = 2; \n        ctx.stroke();\n    \n    }, []);\n\n\n    \n    useEffect(() => { \n\n        canvas.addEventListener(\"click\", drawVeriticalLine);\n\n        return () => { \n            canvas.removeEventListener(\"click\", drawVeriticalLine);\n        }\n    }, []);\n\n\n    function handleClick() {\n        console.log(verticalLines);\n    }\n\n\n\n    return (\n        <>\n            <canvas id=\"graph\" ref={canvas} width=\"800\" height=\"400\"></canvas>\n            <button onClick={handleClick}>Log</button>\n        </>\n    )\n}\n\nexport default Graph;\n\n\n\n\n\n\n\n\n/*\n\n\nOk Here's what the fuck is happening. \n\nSo right now the lines get drawn but aren't stored anywhere. \n\nI need the data array to contain three items per point: \n    - price\n    - id\n    - class\n\nso the array should look like: \n\n    [[58, 0, 1], [50, 0, 1], [60, 1, 3]]\n\nPrice should be generated randomly for now. \nId will be unique for each section bounded by vertical lines\nClass will be generated randomly for now 0-k\n\n\n*/"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAE,CAAC,EAAE,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAEnH,SAASC,iBAAiBA,CAACC,KAAK,EAAE;IAE9B,MAAMC,GAAG,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,IAAI,GAAGN,MAAM,CAACO,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,CAAC,GAAGL,KAAK,CAACM,OAAO,GAAGH,IAAI,CAACI,IAAI;IAEnCN,GAAG,CAACO,SAAS,CAAC,CAAC;IACfP,GAAG,CAACQ,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;IAChBJ,GAAG,CAACS,MAAM,CAACL,CAAC,EAAER,MAAM,CAACC,MAAM,CAAC;IAC5BG,GAAG,CAACU,WAAW,GAAG,OAAO;IACzBV,GAAG,CAACW,SAAS,GAAG,CAAC;IACjBX,GAAG,CAACY,MAAM,CAAC,CAAC;IAEZxB,gBAAgB,CAACyB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAET,CAAC,CAAC,CAAC;EACpD;;EAGA;EACA1B,SAAS,CAAC,MAAM;IAGZY,aAAa,CAACC,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAE;IAAE,CAAC,EAAE,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAGxF,CAAC,EAAE,EAAE,CAAC;;EAGN;EACAnB,SAAS,CAAC,MAAM;IAEZ,MAAMsB,GAAG,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IAEnCD,GAAG,CAACc,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACmB,KAAK,EAAEnB,MAAM,CAACC,MAAM,CAAC;IAChDG,GAAG,CAACO,SAAS,CAAC,CAAC;IACfP,GAAG,CAACQ,MAAM,CAAC,CAAC,EAAEnB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/BA,UAAU,CAAC2B,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACjC,MAAMd,CAAC,GAAIc,KAAK,IAAI7B,UAAU,CAACI,MAAM,GAAG,CAAC,CAAC,GAAIG,MAAM,CAACmB,KAAK;MAC1D,MAAMI,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC;MACtBjB,GAAG,CAACS,MAAM,CAACL,CAAC,EAAEe,KAAK,CAAC;IACxB,CAAC,CAAC;IAEFnB,GAAG,CAACU,WAAW,GAAG,MAAM;IACxBV,GAAG,CAACoB,SAAS,GAAG,CAAC;IACjBpB,GAAG,CAACY,MAAM,CAAC,CAAC;EAEhB,CAAC,EAAE,EAAE,CAAC;EAINlC,SAAS,CAAC,MAAM;IAEZkB,MAAM,CAACyB,gBAAgB,CAAC,OAAO,EAAEvB,iBAAiB,CAAC;IAEnD,OAAO,MAAM;MACTF,MAAM,CAAC0B,mBAAmB,CAAC,OAAO,EAAExB,iBAAiB,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,SAASyB,WAAWA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAACtC,aAAa,CAAC;EAC9B;EAIA,oBACIN,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBACI7C,OAAA;MAAQ8C,EAAE,EAAC,OAAO;MAACC,GAAG,EAAEhC,MAAO;MAACmB,KAAK,EAAC,KAAK;MAAClB,MAAM,EAAC;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAClEnD,OAAA;MAAQoD,OAAO,EAAEV,WAAY;MAAAG,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC5C,CAAC;AAEX;AAAC/C,EAAA,CAhFQD,KAAK;AAAAkD,EAAA,GAALlD,KAAK;AAkFd,eAAeA,KAAK;;AASpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}