{"ast":null,"code":"var _jsxFileName = \"/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Graph() {\n  _s();\n  const [verticalLines, setVerticalLines] = useState([]);\n  const [dataPoints, setDataPoints] = useState([]);\n  function drawVeriticalLine(event) {\n    const canvas = document.getElementById(\"graph\");\n    const ctx = canvas.getContext(\"2d\");\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    ctx.beginPath();\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, canvas.height);\n    ctx.strokeStyle = \"black\";\n    ctx.linewidth = 2;\n    ctx.stroke();\n    setVerticalLines(prevLines => [...prevLines, x]);\n  }\n  useEffect(() => {\n    const canvas = document.getElementById(\"graph\");\n    const ctx = canvas.getContext('2d');\n    const dataPoints = Array.from({\n      length: 20\n    }, () => [Math.random() * canvas.height, 0, 0]);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.moveTo(0, dataPoints[0][0]);\n    dataPoints.forEach((point, index) => {\n      const x = index / (dataPoints.length - 1) * canvas.width;\n      const price = point[0];\n      ctx.lineTo(x, price);\n    });\n    ctx.strokeStyle = \"blue\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }, []);\n  useEffect(() => {\n    const canvas = document.getElementById(\"graph\");\n    canvas.addEventListener(\"click\", drawVeriticalLine);\n    return () => {\n      canvas.removeEventListener(\"click\", drawVeriticalLine);\n    };\n  }, []);\n  function handleClick() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"graph\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Graph, \"CTxck7ZpyulfxMGANQAalrE/1rY=\");\n_c = Graph;\nexport default Graph;\n\n/*\n\n\nOk Here's what the fuck is happening. \n\nSo right now the lines get drawn but aren't stored anywhere. \n\nI need the data array to contain three items per point: \n    - price\n    - id\n    - class\n\nso the array should look like: \n\n    [[58, 0, 1], [50, 0, 1], [60, 1, 3]]\n\nPrice should be generated randomly for now. \nId will be unique for each section bounded by vertical lines\nClass will be generated randomly for now 0-k\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Graph","_s","verticalLines","setVerticalLines","dataPoints","setDataPoints","drawVeriticalLine","event","canvas","document","getElementById","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","beginPath","moveTo","lineTo","height","strokeStyle","linewidth","stroke","prevLines","Array","from","length","Math","random","clearRect","width","forEach","point","index","price","lineWidth","addEventListener","removeEventListener","handleClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction Graph() { \n\n    const [verticalLines, setVerticalLines] = useState([]);\n    const [dataPoints, setDataPoints] = useState([]);\n\n    function drawVeriticalLine(event) { \n        const canvas = document.getElementById(\"graph\");\n        const ctx = canvas.getContext(\"2d\");\n        \n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.strokeStyle = \"black\";\n        ctx.linewidth = 2;\n        ctx.stroke();\n\n        setVerticalLines(prevLines => [...prevLines, x]);\n    }\n\n\n    useEffect(() => { \n        const canvas = document.getElementById(\"graph\");\n        const ctx = canvas.getContext('2d');\n\n        const dataPoints = Array.from({length: 20}, () => [Math.random() * canvas.height, 0, 0]);\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.beginPath();\n        ctx.moveTo(0, dataPoints[0][0]);\n\n        dataPoints.forEach((point, index) => { \n            const x = (index / (dataPoints.length - 1)) * canvas.width;\n            const price = point[0]\n            ctx.lineTo(x, price);\n        });\n\n        ctx.strokeStyle = \"blue\";\n        ctx.lineWidth = 2; \n        ctx.stroke();\n    \n    }, []);\n\n\n    useEffect(() => { \n        const canvas = document.getElementById(\"graph\");\n        canvas.addEventListener(\"click\", drawVeriticalLine);\n\n        return () => { \n            canvas.removeEventListener(\"click\", drawVeriticalLine);\n        }\n    }, []);\n\n\n    function handleClick() {\n\n    }\n\n\n\n    return (\n        <>\n            <canvas id=\"graph\" width=\"800\" height=\"400\"></canvas>\n            <button onClick={handleClick}>Log</button>\n        </>\n    )\n}\n\nexport default Graph;\n\n\n\n\n\n\n\n\n/*\n\n\nOk Here's what the fuck is happening. \n\nSo right now the lines get drawn but aren't stored anywhere. \n\nI need the data array to contain three items per point: \n    - price\n    - id\n    - class\n\nso the array should look like: \n\n    [[58, 0, 1], [50, 0, 1], [60, 1, 3]]\n\nPrice should be generated randomly for now. \nId will be unique for each section bounded by vertical lines\nClass will be generated randomly for now 0-k\n\n\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}