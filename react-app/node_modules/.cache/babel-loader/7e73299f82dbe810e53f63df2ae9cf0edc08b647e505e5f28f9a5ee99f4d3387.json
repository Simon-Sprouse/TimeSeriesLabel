{"ast":null,"code":"var _jsxFileName = \"/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Graph() {\n  const canvas = document.getElementById(\"graph\");\n  const ctx = canvas.getContext(\"2d\");\n\n  // Example data\n  const stockData = [100, 105, 102, 110, 108, 115, 112, 120, 125, 130];\n\n  // Draw the initial stock chart\n  function drawStockChart(data) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n    ctx.beginPath();\n    const stepX = canvas.width / data.length;\n    const maxPrice = Math.max(...data);\n    const minPrice = Math.min(...data);\n    data.forEach((price, index) => {\n      const x = index * stepX;\n      const y = (maxPrice - price) / (maxPrice - minPrice) * canvas.height;\n      if (index === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    ctx.strokeStyle = \"#00f\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }\n\n  // Draw a vertical line at the specified x-coordinate\n  function drawVerticalLine(x) {\n    ctx.beginPath();\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, canvas.height);\n    ctx.strokeStyle = \"#000\";\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }\n\n  // Event listener for mouse clicks\n  canvas.addEventListener(\"click\", function (event) {\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n\n    // Draw a vertical line at the clicked position\n    drawVerticalLine(x);\n  });\n  drawStockChart(stockData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"graph\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Graph","canvas","document","getElementById","ctx","getContext","stockData","drawStockChart","data","clearRect","width","height","beginPath","stepX","length","maxPrice","Math","max","minPrice","min","forEach","price","index","x","y","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawVerticalLine","addEventListener","event","rect","getBoundingClientRect","clientX","left","_jsxDEV","_Fragment","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simonsprouse/Desktop/Rev/TimeSeriesLabel/my-app/src/Graph.js"],"sourcesContent":["function Graph() { \n\n    const canvas = document.getElementById(\"graph\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // Example data\n    const stockData = [100, 105, 102, 110, 108, 115, 112, 120, 125, 130];\n\n    // Draw the initial stock chart\n    function drawStockChart(data) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas\n        ctx.beginPath();\n\n        const stepX = canvas.width / data.length;\n        const maxPrice = Math.max(...data);\n        const minPrice = Math.min(...data);\n\n        data.forEach((price, index) => {\n            const x = index * stepX;\n            const y = ((maxPrice - price) / (maxPrice - minPrice)) * canvas.height;\n\n            if (index === 0) {\n                ctx.moveTo(x, y);\n            } else {\n                ctx.lineTo(x, y);\n            }\n        });\n\n        ctx.strokeStyle = \"#00f\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n    }\n\n    // Draw a vertical line at the specified x-coordinate\n    function drawVerticalLine(x) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.strokeStyle = \"#000\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n    }\n\n    // Event listener for mouse clicks\n    canvas.addEventListener(\"click\", function(event) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n\n        // Draw a vertical line at the clicked position\n        drawVerticalLine(x);\n    });\n\n    drawStockChart(stockData);\n\n\n    return (\n        <>\n            <canvas id=\"graph\" width=\"800\" height=\"400\"></canvas>\n        </>\n    )\n}\n\nexport default Graph;"],"mappings":";;AAAA,SAASA,KAAKA,CAAA,EAAG;EAEb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMC,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAEpE;EACA,SAASC,cAAcA,CAACC,IAAI,EAAE;IAC1BJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAER,MAAM,CAACS,KAAK,EAAET,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC;IAClDP,GAAG,CAACQ,SAAS,CAAC,CAAC;IAEf,MAAMC,KAAK,GAAGZ,MAAM,CAACS,KAAK,GAAGF,IAAI,CAACM,MAAM;IACxC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGT,IAAI,CAAC;IAClC,MAAMU,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGX,IAAI,CAAC;IAElCA,IAAI,CAACY,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC3B,MAAMC,CAAC,GAAGD,KAAK,GAAGT,KAAK;MACvB,MAAMW,CAAC,GAAI,CAACT,QAAQ,GAAGM,KAAK,KAAKN,QAAQ,GAAGG,QAAQ,CAAC,GAAIjB,MAAM,CAACU,MAAM;MAEtE,IAAIW,KAAK,KAAK,CAAC,EAAE;QACblB,GAAG,CAACqB,MAAM,CAACF,CAAC,EAAEC,CAAC,CAAC;MACpB,CAAC,MAAM;QACHpB,GAAG,CAACsB,MAAM,CAACH,CAAC,EAAEC,CAAC,CAAC;MACpB;IACJ,CAAC,CAAC;IAEFpB,GAAG,CAACuB,WAAW,GAAG,MAAM;IACxBvB,GAAG,CAACwB,SAAS,GAAG,CAAC;IACjBxB,GAAG,CAACyB,MAAM,CAAC,CAAC;EAChB;;EAEA;EACA,SAASC,gBAAgBA,CAACP,CAAC,EAAE;IACzBnB,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACqB,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;IAChBnB,GAAG,CAACsB,MAAM,CAACH,CAAC,EAAEtB,MAAM,CAACU,MAAM,CAAC;IAC5BP,GAAG,CAACuB,WAAW,GAAG,MAAM;IACxBvB,GAAG,CAACwB,SAAS,GAAG,CAAC;IACjBxB,GAAG,CAACyB,MAAM,CAAC,CAAC;EAChB;;EAEA;EACA5B,MAAM,CAAC8B,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;IAC7C,MAAMC,IAAI,GAAGhC,MAAM,CAACiC,qBAAqB,CAAC,CAAC;IAC3C,MAAMX,CAAC,GAAGS,KAAK,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;;IAEnC;IACAN,gBAAgB,CAACP,CAAC,CAAC;EACvB,CAAC,CAAC;EAEFhB,cAAc,CAACD,SAAS,CAAC;EAGzB,oBACI+B,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACIF,OAAA;MAAQG,EAAE,EAAC,OAAO;MAAC9B,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBACvD,CAAC;AAEX;AAACC,EAAA,GA5DQ7C,KAAK;AA8Dd,eAAeA,KAAK;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}